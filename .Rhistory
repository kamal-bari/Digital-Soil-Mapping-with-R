glimpse()
setwd("L:/Training/Digital Soil Mapping Training (BARC 17-18 Jan 2023)/DSM_On-line Training 27 Feb to 13 June 2023/Homework")
library(tidyverse)
library(tidyverse)
library(tidyverse)
rice <- read.csv("bd_rice_production.csv")
rice <- read.csv("bd_rice_production.csv")
district <- read.csv("bd_district.csv")
division <- read.csv("bd_division.csv")
raj_soil <- read.csv("raj_soil_data.csv")
bd_soil <- read.csv("bd_soil_data_raw.csv")
rice_dist = dplyr::inner_join(rice, district)
rice_dist = dplyr::inner_join(rice, district)
head(rice_dist)
rice_dist = dplyr::inner_join(rice, district)
glimpse()
rice_dist = dplyr::inner_join(rice, district)
glimpse()
rice_dist = dplyr::inner_join(rice, district) %>% glimpse()
# 1.	Join rice production, and district file using dplyr::inner_join()
rice_dist = dplyr::inner_join(rice, district) %>%
# 2.	Join division file using dplyr::inner_join()
dplyr::inner_join(division) %>%
glimpse()
# 1.	Join rice production, and district file using dplyr::inner_join()
bd_rice = dplyr::inner_join(rice, district) %>%
# 2.	Join division file using dplyr::inner_join()
dplyr::inner_join(division) %>%
glimpse()
bd_rice <-dplyr::relocate(bd_rice, DIVISION_ID, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, YEAR, MT,
.after =  DIVISION_ID)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, YEAR, MT,
.after =  DIVISION_ID)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, YEAR, MT,
.after =  DIVISION_NAME)
head(bd_rice)
# 1.	Join rice production, and district file using dplyr::inner_join()
bd_rice = dplyr::inner_join(rice, district) %>%
# 2.	Join division file using dplyr::inner_join()
dplyr::inner_join(division) %>%
#glimpse()
head(bd_rice)
# 1.	Join rice production, and district file using dplyr::inner_join()
bd_rice = dplyr::inner_join(rice, district) %>%
# 2.	Join division file using dplyr::inner_join()
dplyr::inner_join(division) %>%
glimpse()
head(bd_rice)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE)
head(bd_rice)
rice <- read.csv("bd_rice_production.csv")
head(rice)
district <- read.csv("bd_district.csv")
head(district)
division <- read.csv("bd_division.csv")
head(division)
raj_soil <- read.csv("raj_soil_data.csv")
head(raj_soil)
bd_soil <- read.csv("bd_soil_data_raw.csv")
head(bd_soil)
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_ID" = "DISTRICT_PCODE")
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_ID" = "DISTRICT_PCODE")
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID")
names(bd_rice)
# 1.	Join rice production, and district file using dplyr::inner_join()
bd_rice = dplyr::inner_join(rice, district) %>%
# 2.	Join division file using dplyr::inner_join()
dplyr::inner_join(division) %>%
glimpse()
# 1.	Join rice production, and district file using dplyr::inner_join()
bd_rice = dplyr::inner_join(rice, district)
bd_rice = dplyr::inner_join(bd_rice, district)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE)
bd_rice = dplyr::inner_join(bd_rice, division)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE)
head(bd_rice)
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID")
names(bd_rice)
df.rice.csv = dplyr::inner_join(rice, district) %>%
dplyr::inner_join(division) %>%
dplyr::relocate(DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE) %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID") %>%
glimpse()
df.dist <- df.rice.csv %>%
dplyr::select(DISTRICT_NAME, YEAR,  MT,) %>%
glimpse()
df.raj<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi")
levels(as.factor(df.raj$DIVISION_NAME))
df.raj<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi")
levels(as.factor(df.raj$DISTRICT_NAME))
df.div<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME %in%c("Rajshahi", "Dhaka"))
levels(as.factor(df.div$DISTRICT_NAME))
df.div.01<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" | DIVISION_NAME == "Dhaka")
levels(as.factor(df.div.01$DISTRICT_NAME))
df.raj.bogra<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" & DISTRICT_NAME == "Bogra")
head(df.raj.bogra)
mean.prod <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE))
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2017-18)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > min(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > min(MT, na.rm = TRUE) & YEAR ==2012-13)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
summary (df.rice.csv$MT)
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > min(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE))
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod. <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod.2018_19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018_19$DISTRICT_NAME))
mean.prod.2018.19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018.19$DISTRICT_NAME))
df.raj.bogra<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" & DISTRICT_NAME == "Bogra")
tail(df.raj.bogra)
mean.prod.2018.19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018.19$DISTRICT_NAME))
getwd()
library(tidyverse)
rice <- read.csv("bd_rice_production.csv")
head(rice)
district <- read.csv("bd_district.csv")
head(district)
division <- read.csv("bd_division.csv")
head(division)
raj_soil <- read.csv("raj_soil_data.csv")
head(raj_soil)
bd_soil <- read.csv("bd_soil_data_raw.csv")
head(bd_soil)
bd_rice = dplyr::inner_join(rice, district)
bd_rice = dplyr::inner_join(bd_rice, division)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE)
head(bd_rice)
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID")
names(bd_rice)
df.rice.csv = dplyr::inner_join(rice, district) %>%
dplyr::inner_join(division) %>%
dplyr::relocate(DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE) %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID") %>%
glimpse()
df.dist <- df.rice.csv %>%
dplyr::select(DISTRICT_NAME, YEAR,  MT,) %>%
glimpse()
df.raj<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi")
levels(as.factor(df.raj$DISTRICT_NAME))
df.div<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME %in%c("Rajshahi", "Dhaka"))
levels(as.factor(df.div$DISTRICT_NAME))
df.div.01<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" | DIVISION_NAME == "Dhaka")
levels(as.factor(df.div.01$DISTRICT_NAME))
df.raj.bogra<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" & DISTRICT_NAME == "Bogra")
tail(df.raj.bogra)
mean.prod <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE))
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod.2018.19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018.19$DISTRICT_NAME))
dist.p <- df.rice.csv %>%
dplyr::filter(grepl("^P", DISTRICT_NAME))
levels(as.factor(dist.p$DISTRICT_NAME))
soil %>%
dplyr::summarise_at(raj_soil, "SOC", mean, na.rm = TRUE)
soil <- raj_soil
soil %>%
dplyr::summarise_at("SOC", mean, na.rm = TRUE)
soil <- raj_soil
soil %>%
dplyr::summarise_at("SOM", mean, na.rm = TRUE)
colnames(raj_soil)
library(tidyverse)
rice <- read.csv("bd_rice_production.csv")
head(rice)
district <- read.csv("bd_district.csv")
head(district)
division <- read.csv("bd_division.csv")
head(division)
raj_soil <- read.csv("raj_soil_data.csv")
head(raj_soil)
bd_soil <- read.csv("bd_soil_data_raw.csv")
head(bd_soil)
bd_rice = dplyr::inner_join(rice, district)
bd_rice = dplyr::inner_join(bd_rice, division)
bd_rice <-dplyr::relocate(bd_rice, DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE)
head(bd_rice)
bd_rice <- bd_rice %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID")
names(bd_rice)
df.rice.csv = dplyr::inner_join(rice, district) %>%
dplyr::inner_join(division) %>%
dplyr::relocate(DIVISION_PCODE, DIVISION_NAME, DISTRICT_ID, DISTRICT_NAME, SEASON, YEAR, MT,
.after =  DIVISION_PCODE) %>%
dplyr::rename("DISTRICT_PCODE" = "DISTRICT_ID") %>%
glimpse()
df.dist <- df.rice.csv %>%
dplyr::select(DISTRICT_NAME, YEAR,  MT,) %>%
glimpse()
df.raj<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi")
levels(as.factor(df.raj$DISTRICT_NAME))
df.div<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME %in%c("Rajshahi", "Dhaka"))
levels(as.factor(df.div$DISTRICT_NAME))
df.div.01<- df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" | DIVISION_NAME == "Dhaka")
levels(as.factor(df.div.01$DISTRICT_NAME))
df.raj.bogra<-df.rice.csv %>%
dplyr::filter(DIVISION_NAME == "Rajshahi" & DISTRICT_NAME == "Bogra")
tail(df.raj.bogra)
mean.prod <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE))
levels(as.factor(mean.prod$DISTRICT_NAME))
mean.prod.2018.19 <- df.rice.csv %>%
dplyr::filter(MT > mean(MT, na.rm = TRUE) & YEAR ==2018-19)
levels(as.factor(mean.prod.2018.19$DISTRICT_NAME))
dist.p <- df.rice.csv %>%
dplyr::filter(grepl("^P", DISTRICT_NAME))
levels(as.factor(dist.p$DISTRICT_NAME))
soil <- raj_soil
soil %>%
dplyr::summarise_at("SOM", mean, na.rm = TRUE)
```{r}
colnames(raj_soil)
raj_soil.SOM <- raj_soil %>%
dplyr::summarise_at("SOM", mean, na.rm = TRUE)
raj_soil.SOM <- raj_soil %>%
dplyr::summarise_at("SOM", mean, na.rm = TRUE)%>%
glimpse()
raj_soil %>%
dplyr::summarise_at("SOM", mean, na.rm = TRUE)%>%
glimpse()
bd_soil %>%
dplyr::summarise_at(c("SOM", "NDVI"), mean, na.rm = TRUE)
colnames(bd_soil)
bd_soil %>%
dplyr::summarise_at(c("SOM", "NDVI"), mean, na.rm = TRUE)
raj_soil %>%
dplyr::summarise_at(c("SOM", "NDVI"), mean, na.rm = TRUE)
raj_soil %>%
dplyr::summarise_if(is.numeric, mean, na.rm = TRUE)
raj_soil %>%
# First select  numerical columns
dplyr::select(PH, SOM, DEM, NDFI, NDVI) %>%
# get mean of all these variables
dplyr::summarise_all(mean, na.rm = TRUE)
raj_soil %>%
# First select  numerical columns
dplyr::select(pH, SOM, DEM, NDFI, NDVI) %>%
# get mean of all these variables
dplyr::summarise_all(mean, na.rm = TRUE)
df.rice.csv %>%
# get mean of all these variables
dplyr::mutate(MT_1000 = MT / 10000) %>%
glimpse()
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DISTRICT_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(mean(MT)) %>%
dplyr::mutate(Prod_1000_MT =MT / 1000)
colnames(df.rice.csv)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(mean(MT)) %>%
dplyr::mutate(Prod_1000_MT =MT / 1000)
colnames(df.rice.csv)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = MT / 1000)
df.rice.csv %>%
dplyr::mutate(MT_1000 = MT / 10000) %>%
glimpse()
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
df.rice.csv %>%
dplyr::filter(YEAR==2018-19) %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
df.rice.csv %>%
dplyr::filter(YEAR=="2018-19") %>%
dplyr::group_by(DIVISION_NAME) %>%
dplyr::summarize(Prod_MT = mean(MT)) %>%
dplyr::mutate(Prod_1000_MT = Prod_MT / 1000)
rice.wider = df.rice.csv  %>%
tidyr::pivot_wider() %>%
glimpse()
rice.wider = df.rice.csv  %>%
tidyr::pivot_wider() %>%
glimpse()
colnames(df.rice.csv)
rice.wider = df.rice.csv  %>%
dplyr::select (DIVISION_NAME, DISTRICT_NAME, SEASON, YEAR, MT) %>%
tidyr::pivot_wider(names_from = YEAR, values_from = MT) %>%
glimpse()
rice.wider = df.rice.csv  %>%
dplyr::select (YEAR, MT) %>%
tidyr::pivot_wider(names_from = YEAR, values_from = MT) %>%
glimpse()
rice.wider = df.rice.csv  %>%
#dplyr::select (DIVISION_NAME, DISTRICT_NAME, SEASON, YEAR, MT) %>%
tidyr::pivot_wider(names_from = YEAR, values_from = MT) %>%
glimpse()
rice.wider = df.rice.csv  %>%
dplyr::select (DIVISION_NAME, DISTRICT_NAME, SEASON, YEAR, MT) %>%
tidyr::pivot_wider(names_from = YEAR, values_from = MT) %>%
glimpse()
names(rice.wider)
rice.longer<- rice.wider %>%
tidyr::pivot_longer(cols= c("2012-2013", "2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019"),
names_to = "SEASON", # column need to be wider
values_to = "MT") # data
rice.longer<- rice.wider %>%
tidyr::pivot_longer(cols= c("2012-2013", "2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019"),
names_to = "YEAR", # column need to be wider
values_to = "MT") # data
head(rice.longer)
rice.longer<- rice.wider %>%
tidyr::pivot_longer(cols= c("2012-2013", "2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019"),
names_to = "YEAR", # column need to be wider
values_to = "SEASON") # data
rice.longer<- rice.wider %>%
tidyr::pivot_longer(cols= c("2012-2013", "2013-2014", "2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019"),
names_to = "YEAR", # column need to be wider
values_to = "MT") # data
head(rice.longer)
glimpse(bd_soil)
mf.geo <- bd_soil %>%
select(x,y,DIVISION_NAME,DISTRICT_NAME, UPAZILA_NAMAE,UNION_NAME, Soil_PH,Soil_SOM,Soil_K, Soil_Ca, MG, N, P, S, B, CU, FE, MN, ZN) %>%
rename("PH"=Soil_PH,
"SOM" =Soil_SOM,
"K" = Soil_K,
"Ca" = Soil_Ca)%>%
glimpse()
# Filter the data where records have N.D. values
mf.geo<- mf.geo %>%
filter(B != "N.D.")
# convert all N.D. values to empty string
mf.geo[mf.geo=="N.D."]<- ""
# Here detection limits of K, Ca, N, P, S, CU, FE, and Mn are 0.1, 0.1, 0.1, 1.0, 0.05, 0.1, 1.0 and 0.1 mg/kg, respectively. We will replace the values below detection limits by half of detection limits of these nutrients. Before that we have to remove “<” and convert the all to .
mf.geo <- mf.geo %>%
mutate_at(c("K", "Ca", "N", "P", "S", "CU", "FE", "MN"), str_replace, "<", "")%>%
mutate_at(c("K", "Ca", "N", "P", "S", "CU", "FE", "MN"), as.numeric) %>% glimpse()
# replace values below detection limits
mf.geo["K"][mf.geo["K"] == 0.1] <- 0.05
mf.geo["Ca"][mf.geo["Ca"] == 0.1] <- 0.05
mf.geo["N"][mf.geo["N"] == 0.1] <- 0.05
mf.geo["P"][mf.geo["P"] == 1.0] <- 0.5
mf.geo["S"][mf.geo["S"] == 0.05] <- 0.025
mf.geo["CU"][mf.geo["CU"] == 0.1] <- 0.05
mf.geo["FE"][mf.geo["FE"] == 1.0] <- 0.5
mf.geo["MN"][mf.geo["MN"] == 0.1] <- 0.05
# counting unique, missing, and median values
K<- mf.geo %>% summarise(N = length(K),
na = sum(is.na(K)),
Min = min(K, na.rm = TRUE),
Max =max(K, na.rm = TRUE))
Ca<- mf.geo %>% summarise(N = length(ca),
na = sum(is.na(ca)),
Min = min(ca, na.rm = TRUE),
Max =max(ca, na.rm = TRUE))
# counting unique, missing, and median values
K<- mf.geo %>% summarise(N = length(K),
na = sum(is.na(K)),
Min = min(K, na.rm = TRUE),
Max =max(K, na.rm = TRUE))
Ca<- mf.geo %>% summarise(N = length(Ca),
na = sum(is.na(Ca)),
Min = min(Ca, na.rm = TRUE),
Max =max(Ca, na.rm = TRUE))
N<- mf.geo %>% summarise(N = length(N),
na = sum(is.na(N)),
Min = min(N, na.rm = TRUE),
Max =max(N, na.rm = TRUE))
P<- mf.geo %>% summarise(N = length(P),
na = sum(is.na(P)),
Min = min(P, na.rm = TRUE),
Max =max(P, na.rm = TRUE))
S<- mf.geo %>% summarise(N = length(S),
na = sum(is.na(S)),
Min = min(S, na.rm = TRUE),
Max =max(S, na.rm = TRUE))
CU<- mf.geo %>% summarise(N = length(CU),
na = sum(is.na(CU)),
Min = min(CU, na.rm = TRUE),
Max =max(CU, na.rm = TRUE))
FE<- mf.geo %>% summarise(N = length(FE),
na = sum(is.na(FE)),
Min = min(FE, na.rm = TRUE),
Max =max(FE, na.rm = TRUE))
MN<- mf.geo %>% summarise(N = length(MN),
na = sum(is.na(MN)),
Min = min(MN, na.rm = TRUE),
Max =max(MN, na.rm = TRUE),
)
#bind the data
geo.sum<- bind_rows(K, Ca, N, P, S, CU, FE, MN)
#add.row.names
row.names(geo.sum) <- c("K", "Ca", "N", "P", "S", "CU", "FE", "MN")
head(geo.sum)
# counting unique, missing, and median values
K<- mf.geo %>% summarise(Length = length(K),
na = sum(is.na(K)),
Min = min(K, na.rm = TRUE),
Max =max(K, na.rm = TRUE))
Ca<- mf.geo %>% summarise(Length = length(Ca),
na = sum(is.na(Ca)),
Min = min(Ca, na.rm = TRUE),
Max =max(Ca, na.rm = TRUE))
N<- mf.geo %>% summarise(Length = length(N),
na = sum(is.na(N)),
Min = min(N, na.rm = TRUE),
Max =max(N, na.rm = TRUE))
P<- mf.geo %>% summarise(Length = length(P),
na = sum(is.na(P)),
Min = min(P, na.rm = TRUE),
Max =max(P, na.rm = TRUE))
S<- mf.geo %>% summarise(Length = length(S),
na = sum(is.na(S)),
Min = min(S, na.rm = TRUE),
Max =max(S, na.rm = TRUE))
CU<- mf.geo %>% summarise(Length = length(CU),
na = sum(is.na(CU)),
Min = min(CU, na.rm = TRUE),
Max =max(CU, na.rm = TRUE))
FE<- mf.geo %>% summarise(Length = length(FE),
na = sum(is.na(FE)),
Min = min(FE, na.rm = TRUE),
Max =max(FE, na.rm = TRUE))
MN<- mf.geo %>% summarise(Length = length(MN),
na = sum(is.na(MN)),
Min = min(MN, na.rm = TRUE),
Max =max(MN, na.rm = TRUE),
)
#bind the data
geo.sum<- bind_rows(K, Ca, N, P, S, CU, FE, MN)
#add.row.names
row.names(geo.sum) <- c("K", "Ca", "N", "P", "S", "CU", "FE", "MN")
head(geo.sum)
newdata <- na.omit(mf.geo)
glimpse(newdata)
mf.geo.new<-mf.geo %>% mutate_at(vars(K, Ca, N, P, CU, FE, MN),~ifelse(is.na(.x), mean(.x, na.rm = TRUE), .x)) %>% glimpse()
mf.geo.new %>%summarise(sum(is.na(K)))
mf.geo.new %>%summarise(sum(is.na(c(K, N, P))))
mf.geo.new %>%summarise(sum(is.na(K)))
# save clean data
write_csv(mf.geo.new,"bd_soil_data.final.csv" )
